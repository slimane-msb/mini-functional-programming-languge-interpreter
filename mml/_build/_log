### Starting build.
# Target: mmli.ml.depends, tags: { bin_annot, explain, extension:ml, file:mmli.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules mmli.ml > mmli.ml.depends # cached
# Target: interpreter.ml.depends, tags: { bin_annot, explain, extension:ml, file:interpreter.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules interpreter.ml > interpreter.ml.depends # cached
# Target: mml.ml.depends, tags: { bin_annot, explain, extension:ml, file:mml.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules mml.ml > mml.ml.depends # cached
# Target: mml.cmo, tags: { bin_annot, byte, compile, explain, extension:cmo, extension:ml, file:mml.cmo, file:mml.ml, implem, ocaml, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamlc.opt -c -bin-annot -o mml.cmo mml.ml # cached
# Target: interpreter.cmo, tags: { bin_annot, byte, compile, explain, extension:cmo, extension:ml, file:interpreter.cmo, file:interpreter.ml, implem, ocaml, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamlc.opt -c -bin-annot -o interpreter.cmo interpreter.ml # cached
# Target: mmllexer.mll, tags: { bin_annot, explain, extension:mll, file:mmllexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamllex.opt -q mmllexer.mll # cached
# Target: mmllexer.ml.depends, tags: { bin_annot, explain, extension:ml, file:mmllexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules mmllexer.ml > mmllexer.ml.depends # cached
# Target: mmlparser.mly.depends, tags: { bin_annot, explain, extension:mly, file:mmlparser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep '/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules' mmlparser.mly > mmlparser.mly.depends # cached
# Target: mmlparser.mly, tags: { bin_annot, byte, compile, explain, extension:ml, extension:mly, file:mmlparser.ml, file:mmlparser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir }
menhir --ocamlc '/home/mazino/.opam/4.08.1/bin/ocamlc.opt -bin-annot' --explain --infer mmlparser.mly # cached
# Target: mmlparser.mli.depends, tags: { bin_annot, explain, extension:mli, file:mmlparser.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules mmlparser.mli > mmlparser.mli.depends # cached
# Target: mmlparser.cmi, tags: { bin_annot, byte, compile, explain, extension:mli, file:mmlparser.mli, interf, ocaml, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamlc.opt -c -bin-annot -o mmlparser.cmi mmlparser.mli # cached
# Target: mmllexer.cmo, tags: { bin_annot, byte, compile, explain, extension:cmo, extension:ml, file:mmllexer.cmo, file:mmllexer.ml, implem, ocaml, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamlc.opt -c -bin-annot -o mmllexer.cmo mmllexer.ml # cached
# Target: typechecker.ml.depends, tags: { bin_annot, explain, extension:ml, file:typechecker.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamldep.opt -modules typechecker.ml > typechecker.ml.depends
# Target: typechecker.cmo, tags: { bin_annot, byte, compile, explain, extension:cmo, extension:ml, file:typechecker.cmo, file:typechecker.ml, implem, ocaml, quiet, traverse, use_menhir }
/home/mazino/.opam/4.08.1/bin/ocamlc.opt -c -bin-annot -o typechecker.cmo typechecker.ml
+ /home/mazino/.opam/4.08.1/bin/ocamlc.opt -c -bin-annot -o typechecker.cmo typechecker.ml
File "typechecker.ml", line 38, characters 73-77:
38 |                           let strc = List.find (fun (str1,t,_) -> str1 = strc) l in 
                                                                              ^^^^
Error: Unbound value strc
Hint: Did you mean str1?
Command exited with code 2.
# Compilation unsuccessful.
